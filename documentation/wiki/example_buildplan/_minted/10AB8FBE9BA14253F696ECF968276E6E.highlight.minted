\begin{MintedVerbatim}[commandchars=\\\{\}]
\PYG{c+cm}{\PYGZob{}\PYGZhy{}}\PYG{c+cm}{\PYGZsh{} LANGUAGE DataKinds \PYGZsh{}}\PYG{c+cm}{\PYGZhy{}\PYGZcb{}}
\PYG{c+cm}{\PYGZob{}\PYGZhy{}}\PYG{c+cm}{\PYGZsh{} LANGUAGE GADTs \PYGZsh{}}\PYG{c+cm}{\PYGZhy{}\PYGZcb{}}
\PYG{c+cm}{\PYGZob{}\PYGZhy{}}\PYG{c+cm}{\PYGZsh{} LANGUAGE TypeFamilies \PYGZsh{}}\PYG{c+cm}{\PYGZhy{}\PYGZcb{}}
\PYG{c+cm}{\PYGZob{}\PYGZhy{}}\PYG{c+cm}{\PYGZsh{} LANGUAGE ScopedTypeVariables \PYGZsh{}}\PYG{c+cm}{\PYGZhy{}\PYGZcb{}}
\PYG{c+cm}{\PYGZob{}\PYGZhy{}}\PYG{c+cm}{\PYGZsh{} LANGUAGE FlexibleContexts \PYGZsh{}}\PYG{c+cm}{\PYGZhy{}\PYGZcb{}}
\PYG{c+cm}{\PYGZob{}\PYGZhy{}}\PYG{c+cm}{\PYGZsh{} LANGUAGE RankNTypes \PYGZsh{}}\PYG{c+cm}{\PYGZhy{}\PYGZcb{}}
\PYG{c+cm}{\PYGZob{}\PYGZhy{}}\PYG{c+cm}{\PYGZsh{} LANGUAGE LambdaCase \PYGZsh{}}\PYG{c+cm}{\PYGZhy{}\PYGZcb{}}

\PYG{k+kr}{module}\PYG{+w}{ }\PYG{n+nn}{Ten.Daemon.Core}\PYG{+w}{ }\PYG{k+kr}{where}

\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Control.Concurrent}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{forkIO}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{ThreadId}\PYG{p}{)}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Control.Concurrent.STM}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Control.Exception}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{bracket}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{finally}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{try}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{SomeException}\PYG{p}{)}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Control.Monad}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{unless}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{when}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{void}\PYG{p}{)}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Control.Monad.Reader}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Control.Monad.Except}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Data.Map.Strict}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{Map}\PYG{p}{)}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{k}{qualified}\PYG{+w}{ }\PYG{n+nn}{Data.Map.Strict}\PYG{+w}{ }\PYG{k}{as}\PYG{+w}{ }\PYG{n}{Map}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Data.Set}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{Set}\PYG{p}{)}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{k}{qualified}\PYG{+w}{ }\PYG{n+nn}{Data.Set}\PYG{+w}{ }\PYG{k}{as}\PYG{+w}{ }\PYG{n}{Set}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Data.Text}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{Text}\PYG{p}{)}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{k}{qualified}\PYG{+w}{ }\PYG{n+nn}{Data.Text}\PYG{+w}{ }\PYG{k}{as}\PYG{+w}{ }\PYG{n}{T}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Data.Singletons}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{System.Posix.Types}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{UserID}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{GroupID}\PYG{p}{)}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{System.Posix.User}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{getUserEntryForName}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{getGroupEntryForName}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{setUserID}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{setGroupID}\PYG{p}{)}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{System.Posix.Process}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{getProcessID}\PYG{p}{)}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{System.Directory}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{doesFileExist}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{createDirectoryIfMissing}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{getPermissions}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{setPermissions}\PYG{p}{)}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{System.FilePath}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{takeDirectory}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{\PYGZlt{}/\PYGZgt{}}\PYG{p}{)}\PYG{p}{)}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{System.Process}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{createProcess}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{proc}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{waitForProcess}\PYG{p}{)}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Network.Socket}

\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Ten.Core}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Ten.Daemon.Protocol}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Ten.Daemon.State}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Ten.Daemon.Config}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Ten.Build}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{BuildResult}\PYG{p}{(}\PYG{o}{..}\PYG{p}{)}\PYG{p}{)}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Ten.Store}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{initializeStore}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{createStoreDirectories}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{verifyStorePath}\PYG{p}{)}
\PYG{k+kr}{import}\PYG{+w}{ }\PYG{n+nn}{Ten.Sandbox}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{SandboxConfig}\PYG{p}{(}\PYG{o}{..}\PYG{p}{)}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{defaultSandboxConfig}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{setupSandbox}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nf}{teardownSandbox}\PYG{p}{)}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} | Daemon context with privilege tier information}
\PYG{k+kr}{data}\PYG{+w}{ }\PYG{k+kt}{DaemonContext}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{t}\PYG{+w}{ }\PYG{o+ow}{::}\PYG{+w}{ }\PYG{k+kt}{PrivilegeTier}\PYG{p}{)}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{DaemonContext}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{n}{ctxConfig}\PYG{+w}{ }\PYG{o+ow}{::}\PYG{+w}{ }\PYG{k+kt}{DaemonConfig}\PYG{p}{,}\PYG{+w}{         }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Daemon configuration}
\PYG{+w}{    }\PYG{n}{ctxState}\PYG{+w}{ }\PYG{o+ow}{::}\PYG{+w}{ }\PYG{k+kt}{DaemonState}\PYG{+w}{ }\PYG{n}{t}\PYG{p}{,}\PYG{+w}{         }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Daemon state with privilege tracking}
\PYG{+w}{    }\PYG{n}{ctxSocket}\PYG{+w}{ }\PYG{o+ow}{::}\PYG{+w}{ }\PYG{k+kt}{Maybe}\PYG{+w}{ }\PYG{k+kt}{Socket}\PYG{p}{,}\PYG{+w}{         }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Listening socket}
\PYG{+w}{    }\PYG{n}{ctxPrivilegeEvidence}\PYG{+w}{ }\PYG{o+ow}{::}\PYG{+w}{ }\PYG{k+kt}{SPrivilegeTier}\PYG{+w}{ }\PYG{n}{t}\PYG{p}{,}\PYG{+w}{ }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Runtime privilege evidence}
\PYG{+w}{    }\PYG{n}{ctxStartTime}\PYG{+w}{ }\PYG{o+ow}{::}\PYG{+w}{ }\PYG{k+kt}{UTCTime}\PYG{p}{,}\PYG{+w}{           }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Daemon start time}
\PYG{+w}{    }\PYG{n}{ctxProcessId}\PYG{+w}{ }\PYG{o+ow}{::}\PYG{+w}{ }\PYG{k+kt}{ProcessID}\PYG{p}{,}\PYG{+w}{         }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Process ID}
\PYG{+w}{    }\PYG{n}{ctxLogHandle}\PYG{+w}{ }\PYG{o+ow}{::}\PYG{+w}{ }\PYG{k+kt}{Handle}\PYG{p}{,}\PYG{+w}{            }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Log file handle}
\PYG{+w}{    }\PYG{n}{ctxUnprivilegedUserID}\PYG{+w}{ }\PYG{o+ow}{::}\PYG{+w}{ }\PYG{k+kt}{UserID}\PYG{p}{,}\PYG{+w}{   }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} UID for unprivileged operations}
\PYG{+w}{    }\PYG{n}{ctxUnprivilegedGroupID}\PYG{+w}{ }\PYG{o+ow}{::}\PYG{+w}{ }\PYG{k+kt}{GroupID}\PYG{+w}{  }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} GID for unprivileged operations}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} | Start the daemon with proper privilege handling}
\PYG{n+nf}{startDaemon}\PYG{+w}{ }\PYG{o+ow}{::}\PYG{+w}{ }\PYG{k+kt}{DaemonConfig}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kt}{IO}\PYG{+w}{ }\PYG{n+nb}{()}
\PYG{n+nf}{startDaemon}\PYG{+w}{ }\PYG{n}{config}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Check if daemon is already running}
\PYG{+w}{    }\PYG{n}{running}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{isDaemonRunning}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{daemonSocketPath}\PYG{+w}{ }\PYG{n}{config}\PYG{p}{)}
\PYG{+w}{    }\PYG{n}{when}\PYG{+w}{ }\PYG{n}{running}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{        }\PYG{n}{putStrLn}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{Daemon is already running}\PYG{l+s}{\PYGZdq{}}
\PYG{+w}{        }\PYG{n}{exitSuccess}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Setup essential directories}
\PYG{+w}{    }\PYG{n}{ensureDirectories}\PYG{+w}{ }\PYG{n}{config}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Get unprivileged user/group IDs}
\PYG{+w}{    }\PYG{p}{(}\PYG{n}{unprivUid}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{unprivGid}\PYG{p}{)}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{getUnprivilegedIDs}\PYG{+w}{ }\PYG{n}{config}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Decide whether to run in foreground or background}
\PYG{+w}{    }\PYG{k+kr}{if}\PYG{+w}{ }\PYG{n}{daemonForeground}\PYG{+w}{ }\PYG{n}{config}
\PYG{+w}{        }\PYG{k+kr}{then}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{            }\PYG{n}{putStrLn}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{Starting daemon in foreground mode...}\PYG{l+s}{\PYGZdq{}}
\PYG{+w}{            }\PYG{n}{runDaemon}\PYG{+w}{ }\PYG{n}{config}\PYG{+w}{ }\PYG{n}{unprivUid}\PYG{+w}{ }\PYG{n}{unprivGid}
\PYG{+w}{        }\PYG{k+kr}{else}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{            }\PYG{n}{putStrLn}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{Starting daemon in background mode...}\PYG{l+s}{\PYGZdq{}}
\PYG{+w}{            }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Daemonize}
\PYG{+w}{            }\PYG{n}{daemonize}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{n}{runDaemon}\PYG{+w}{ }\PYG{n}{config}\PYG{+w}{ }\PYG{n}{unprivUid}\PYG{+w}{ }\PYG{n}{unprivGid}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} | Run the daemon process with privilege management}
\PYG{n+nf}{runDaemon}\PYG{+w}{ }\PYG{o+ow}{::}\PYG{+w}{ }\PYG{k+kt}{DaemonConfig}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kt}{UserID}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kt}{GroupID}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kt}{IO}\PYG{+w}{ }\PYG{n+nb}{()}
\PYG{n+nf}{runDaemon}\PYG{+w}{ }\PYG{n}{config}\PYG{+w}{ }\PYG{n}{unprivUid}\PYG{+w}{ }\PYG{n}{unprivGid}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Create daemon context with Daemon privilege}
\PYG{+w}{    }\PYG{n}{context}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{initDaemonContext}\PYG{+w}{ }\PYG{n}{config}\PYG{+w}{ }\PYG{n}{unprivUid}\PYG{+w}{ }\PYG{n}{unprivGid}\PYG{+w}{ }\PYG{k+kt}{SDaemon}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Create listening socket while still privileged}
\PYG{+w}{    }\PYG{n}{listenSocket}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{createListeningSocket}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{daemonSocketPath}\PYG{+w}{ }\PYG{n}{config}\PYG{p}{)}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Update context with socket}
\PYG{+w}{    }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{context\PYGZsq{}}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{context}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{n}{ctxSocket}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{Just}\PYG{+w}{ }\PYG{n}{listenSocket}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Drop privileges if configured}
\PYG{+w}{    }\PYG{n}{when}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{isJust}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{daemonUser}\PYG{+w}{ }\PYG{n}{config}\PYG{p}{)}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{        }\PYG{n}{dropPrivilegesRoot}\PYG{+w}{ }\PYG{n}{context\PYGZsq{}}\PYG{+w}{ }\PYG{n}{config}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Set up logging}
\PYG{+w}{    }\PYG{n}{logHandle}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{setupLogging}\PYG{+w}{ }\PYG{n}{config}
\PYG{+w}{    }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{context\PYGZsq{}\PYGZsq{}}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{context\PYGZsq{}}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{n}{ctxLogHandle}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{logHandle}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Initialize state}
\PYG{+w}{    }\PYG{n}{state}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{initDaemonState}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{daemonStateFile}\PYG{+w}{ }\PYG{n}{config}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{daemonMaxJobs}\PYG{+w}{ }\PYG{n}{config}\PYG{p}{)}\PYG{+w}{ }\PYG{l+m+mi}{100}
\PYG{+w}{    }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{context\PYGZsq{}\PYGZsq{}\PYGZsq{}}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{context\PYGZsq{}\PYGZsq{}}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{n}{ctxState}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{state}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Verify store integrity with daemon privilege evidence}
\PYG{+w}{    }\PYG{n}{verifyStoreIntegrity}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{ctxPrivilegeEvidence}\PYG{+w}{ }\PYG{n}{context\PYGZsq{}\PYGZsq{}\PYGZsq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{daemonStorePath}\PYG{+w}{ }\PYG{n}{config}\PYG{p}{)}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Run main daemon loop with privilege boundaries}
\PYG{+w}{    }\PYG{n}{finally}
\PYG{+w}{        }\PYG{p}{(}\PYG{n}{runDaemonLoop}\PYG{+w}{ }\PYG{n}{context\PYGZsq{}\PYGZsq{}\PYGZsq{}}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{(}\PYG{n}{shutdownDaemon}\PYG{+w}{ }\PYG{n}{context\PYGZsq{}\PYGZsq{}\PYGZsq{}}\PYG{+w}{ }\PYG{n}{logHandle}\PYG{p}{)}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} | Initialize daemon context with proper privilege evidence}
\PYG{n+nf}{initDaemonContext}\PYG{+w}{ }\PYG{o+ow}{::}
\PYG{+w}{    }\PYG{k+kt}{DaemonConfig}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}
\PYG{+w}{    }\PYG{k+kt}{UserID}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}
\PYG{+w}{    }\PYG{k+kt}{GroupID}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}
\PYG{+w}{    }\PYG{k+kt}{SPrivilegeTier}\PYG{+w}{ }\PYG{n}{t}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{  }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Singleton evidence of privilege}
\PYG{+w}{    }\PYG{k+kt}{IO}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{DaemonContext}\PYG{+w}{ }\PYG{n}{t}\PYG{p}{)}
\PYG{n+nf}{initDaemonContext}\PYG{+w}{ }\PYG{n}{config}\PYG{+w}{ }\PYG{n}{unprivUid}\PYG{+w}{ }\PYG{n}{unprivGid}\PYG{+w}{ }\PYG{n}{st}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Get process ID}
\PYG{+w}{    }\PYG{n}{pid}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{getProcessID}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Record start time}
\PYG{+w}{    }\PYG{n}{now}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{getCurrentTime}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Create context with privilege evidence}
\PYG{+w}{    }\PYG{n}{return}\PYG{+w}{ }\PYG{k+kt}{DaemonContext}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{n}{ctxConfig}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{config}\PYG{p}{,}
\PYG{+w}{        }\PYG{n}{ctxState}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n+ne}{error}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{State not initialized}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}\PYG{+w}{  }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Will be set later}
\PYG{+w}{        }\PYG{n}{ctxSocket}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{Nothing}\PYG{p}{,}\PYG{+w}{                       }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Will be set later}
\PYG{+w}{        }\PYG{n}{ctxPrivilegeEvidence}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{st}\PYG{p}{,}\PYG{+w}{                 }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Store privilege evidence}
\PYG{+w}{        }\PYG{n}{ctxStartTime}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{now}\PYG{p}{,}
\PYG{+w}{        }\PYG{n}{ctxProcessId}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{pid}\PYG{p}{,}
\PYG{+w}{        }\PYG{n}{ctxLogHandle}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n+ne}{error}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{Log handle not initialized}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Will be set later}
\PYG{+w}{        }\PYG{n}{ctxUnprivilegedUserID}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{unprivUid}\PYG{p}{,}
\PYG{+w}{        }\PYG{n}{ctxUnprivilegedGroupID}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{unprivGid}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} | Verify store integrity with privilege tracking}
\PYG{n+nf}{verifyStoreIntegrity}\PYG{+w}{ }\PYG{o+ow}{::}
\PYG{+w}{    }\PYG{k+kt}{SPrivilegeTier}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Daemon}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{     }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Privilege evidence}
\PYG{+w}{    }\PYG{k+kt}{FilePath}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{                   }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Store path}
\PYG{+w}{    }\PYG{k+kt}{TenM}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Build}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Daemon}\PYG{+w}{ }\PYG{n+nb}{()}
\PYG{n+nf}{verifyStoreIntegrity}\PYG{+w}{ }\PYG{n}{st}\PYG{+w}{ }\PYG{n}{storePath}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{TenM}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{n+nf}{\PYGZbs{}}\PYG{n}{sp}\PYG{+w}{ }\PYG{k+kr}{\PYGZus{}}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Verify store with proper privilege}
\PYG{+w}{    }\PYG{n}{result}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{withStore}\PYG{+w}{ }\PYG{n}{st}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{n+nf}{\PYGZbs{}}\PYG{n}{st\PYGZsq{}}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}
\PYG{+w}{        }\PYG{n}{verifyStore}\PYG{+w}{ }\PYG{n}{st\PYGZsq{}}\PYG{+w}{ }\PYG{n}{storePath}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Log issues if any}
\PYG{+w}{    }\PYG{k+kr}{case}\PYG{+w}{ }\PYG{n}{result}\PYG{+w}{ }\PYG{k+kr}{of}
\PYG{+w}{        }\PYG{k+kt}{Left}\PYG{+w}{ }\PYG{n}{err}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}
\PYG{+w}{            }\PYG{n}{logError}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{Store verification issue: }\PYG{l+s}{\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kt}{T}\PYG{o}{.}\PYG{n}{pack}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{show}\PYG{+w}{ }\PYG{n}{err}\PYG{p}{)}
\PYG{+w}{        }\PYG{k+kt}{Right}\PYG{+w}{ }\PYG{k+kr}{\PYGZus{}}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}
\PYG{+w}{            }\PYG{n}{logMessage}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{Store verification successful}\PYG{l+s}{\PYGZdq{}}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} | Main daemon loop with privilege boundary checks}
\PYG{n+nf}{runDaemonLoop}\PYG{+w}{ }\PYG{o+ow}{::}
\PYG{+w}{    }\PYG{k+kt}{DaemonContext}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Daemon}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{     }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Daemon context (privileged)}
\PYG{+w}{    }\PYG{k+kt}{TenM}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Build}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Daemon}\PYG{+w}{ }\PYG{n+nb}{()}
\PYG{n+nf}{runDaemonLoop}\PYG{+w}{ }\PYG{n}{context}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{TenM}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{n+nf}{\PYGZbs{}}\PYG{n}{sp}\PYG{+w}{ }\PYG{n}{st}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Create environment with daemon privileges}
\PYG{+w}{    }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{env}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{ctxConfig}\PYG{+w}{ }\PYG{n}{context}
\PYG{+w}{    }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{state}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{ctxState}\PYG{+w}{ }\PYG{n}{context}
\PYG{+w}{    }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{privilegeEvidence}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{ctxPrivilegeEvidence}\PYG{+w}{ }\PYG{n}{context}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Handle active builds with proper privilege checks}
\PYG{+w}{    }\PYG{n}{builds}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{listActiveBuilds}\PYG{+w}{ }\PYG{n}{privilegeEvidence}\PYG{+w}{ }\PYG{n}{state}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Process each active build}
\PYG{+w}{    }\PYG{n}{forM\PYGZus{}}\PYG{+w}{ }\PYG{n}{builds}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{n+nf}{\PYGZbs{}}\PYG{p}{(}\PYG{n}{buildId}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{derivation}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{status}\PYG{p}{)}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{        }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Check if build is running and needs monitoring}
\PYG{+w}{        }\PYG{n}{when}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{status}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{k+kt}{BuildRunning}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{            }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Monitor build with proper privilege evidence}
\PYG{+w}{            }\PYG{n}{monitorBuild}\PYG{+w}{ }\PYG{n}{privilegeEvidence}\PYG{+w}{ }\PYG{n}{state}\PYG{+w}{ }\PYG{n}{buildId}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Schedule new builds from queue if slots available}
\PYG{+w}{    }\PYG{n}{canSchedule}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{hasBuildCapacity}\PYG{+w}{ }\PYG{n}{privilegeEvidence}\PYG{+w}{ }\PYG{n}{state}
\PYG{+w}{    }\PYG{n}{when}\PYG{+w}{ }\PYG{n}{canSchedule}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{        }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Get next build from queue with proper privilege}
\PYG{+w}{        }\PYG{n}{nextBuild}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{getNextBuildToSchedule}\PYG{+w}{ }\PYG{n}{privilegeEvidence}\PYG{+w}{ }\PYG{n}{state}

\PYG{+w}{        }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Start build if available}
\PYG{+w}{        }\PYG{n}{whenJust}\PYG{+w}{ }\PYG{n}{nextBuild}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{n+nf}{\PYGZbs{}}\PYG{n}{build}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{            }\PYG{n}{startBuildProcess}\PYG{+w}{ }\PYG{n}{privilegeEvidence}\PYG{+w}{ }\PYG{n}{state}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{buildId}\PYG{+w}{ }\PYG{n}{build}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{derivation}\PYG{+w}{ }\PYG{n}{build}\PYG{p}{)}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Run periodic maintenance}
\PYG{+w}{    }\PYG{n}{runPeriodicMaintenance}\PYG{+w}{ }\PYG{n}{privilegeEvidence}\PYG{+w}{ }\PYG{n}{state}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Sleep before next iteration}
\PYG{+w}{    }\PYG{n}{liftIO}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{n}{threadDelay}\PYG{+w}{ }\PYG{l+m+mi}{1000000}\PYG{+w}{  }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} 1 second}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Continue loop}
\PYG{+w}{    }\PYG{n}{runDaemonLoop}\PYG{+w}{ }\PYG{n}{context}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} | Spawn a builder process with proper privilege separation}
\PYG{n+nf}{spawnBuilder}\PYG{+w}{ }\PYG{o+ow}{::}
\PYG{+w}{    }\PYG{k+kt}{SPrivilegeTier}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Daemon}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{       }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Privilege evidence}
\PYG{+w}{    }\PYG{k+kt}{Derivation}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{                   }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Derivation to build}
\PYG{+w}{    }\PYG{k+kt}{BuildId}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{                      }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Build ID}
\PYG{+w}{    }\PYG{k+kt}{TenM}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Build}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Daemon}\PYG{+w}{ }\PYG{k+kt}{ProcessHandle}
\PYG{n+nf}{spawnBuilder}\PYG{+w}{ }\PYG{n}{st}\PYG{+w}{ }\PYG{n}{derivation}\PYG{+w}{ }\PYG{n}{buildId}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{TenM}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{n+nf}{\PYGZbs{}}\PYG{n}{sp}\PYG{+w}{ }\PYG{k+kr}{\PYGZus{}}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{    }\PYG{n}{env}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{ask}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Create sandbox configuration}
\PYG{+w}{    }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{sandboxConfig}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{defaultSandboxConfig}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{n}{sandboxUser}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{daemonUser}\PYG{+w}{ }\PYG{n}{env}\PYG{p}{,}
\PYG{+w}{            }\PYG{n}{sandboxGroup}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{daemonGroup}\PYG{+w}{ }\PYG{n}{env}\PYG{p}{,}
\PYG{+w}{            }\PYG{n}{sandboxAllowNetwork}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{False}\PYG{p}{,}\PYG{+w}{   }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Restrict network access}
\PYG{+w}{            }\PYG{n}{sandboxPrivileged}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{False}\PYG{+w}{      }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Run as unprivileged user}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Create build directory in store}
\PYG{+w}{    }\PYG{n}{buildDir}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{createBuildDirectory}\PYG{+w}{ }\PYG{n}{st}\PYG{+w}{ }\PYG{n}{env}\PYG{+w}{ }\PYG{n}{buildId}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Setup sandbox with proper privilege}
\PYG{+w}{    }\PYG{n}{withSandbox}\PYG{+w}{ }\PYG{n}{st}\PYG{+w}{ }\PYG{n}{buildDir}\PYG{+w}{ }\PYG{n}{sandboxConfig}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{n+nf}{\PYGZbs{}}\PYG{n}{sandboxDir}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{        }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Prepare derivation}
\PYG{+w}{        }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{derivationPath}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{sandboxDir}\PYG{+w}{ }\PYG{o}{\PYGZlt{}/\PYGZgt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{derivation.drv}\PYG{l+s}{\PYGZdq{}}
\PYG{+w}{        }\PYG{n}{writeDerivationFile}\PYG{+w}{ }\PYG{n}{st}\PYG{+w}{ }\PYG{n}{derivationPath}\PYG{+w}{ }\PYG{n}{derivation}

\PYG{+w}{        }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Create builder command}
\PYG{+w}{        }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{builderPath}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{storePath}\PYG{+w}{ }\PYG{n}{env}\PYG{+w}{ }\PYG{o}{\PYGZlt{}/\PYGZgt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{libexec/ten\PYGZhy{}builder}\PYG{l+s}{\PYGZdq{}}
\PYG{+w}{        }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{builderArgs}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{p}{[}\PYG{n}{derivationPath}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{\PYGZhy{}\PYGZhy{}build\PYGZhy{}id=}\PYG{l+s}{\PYGZdq{}}\PYG{+w}{ }\PYG{o}{++}\PYG{+w}{ }\PYG{n}{show}\PYG{+w}{ }\PYG{n}{buildId}\PYG{p}{]}
\PYG{+w}{        }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{builderEnv}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{p}{[}
\PYG{+w}{                }\PYG{p}{(}\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{TEN\PYGZus{}STORE}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{storePath}\PYG{+w}{ }\PYG{n}{env}\PYG{p}{)}\PYG{p}{,}
\PYG{+w}{                }\PYG{p}{(}\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{TEN\PYGZus{}BUILD\PYGZus{}DIR}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{buildDir}\PYG{p}{)}\PYG{p}{,}
\PYG{+w}{                }\PYG{p}{(}\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{TEN\PYGZus{}OUT}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{buildDir}\PYG{+w}{ }\PYG{o}{\PYGZlt{}/\PYGZgt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{out}\PYG{l+s}{\PYGZdq{}}\PYG{p}{)}\PYG{p}{,}
\PYG{+w}{                }\PYG{p}{(}\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{TEN\PYGZus{}TMP}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{buildDir}\PYG{+w}{ }\PYG{o}{\PYGZlt{}/\PYGZgt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{tmp}\PYG{l+s}{\PYGZdq{}}\PYG{p}{)}
\PYG{+w}{            }\PYG{p}{]}

\PYG{+w}{        }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Create process}
\PYG{+w}{        }\PYG{n}{process}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{createBuilderProcess}\PYG{+w}{ }\PYG{n}{st}\PYG{+w}{ }\PYG{n}{builderPath}\PYG{+w}{ }\PYG{n}{builderArgs}\PYG{+w}{ }\PYG{n}{builderEnv}

\PYG{+w}{        }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Return process handle}
\PYG{+w}{        }\PYG{n}{return}\PYG{+w}{ }\PYG{n}{process}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} | Drop privileges from root to configured daemon user}
\PYG{n+nf}{dropPrivilegesRoot}\PYG{+w}{ }\PYG{o+ow}{::}
\PYG{+w}{    }\PYG{k+kt}{DaemonContext}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Daemon}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{      }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Daemon context}
\PYG{+w}{    }\PYG{k+kt}{DaemonConfig}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{               }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Configuration}
\PYG{+w}{    }\PYG{k+kt}{TenM}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Build}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Daemon}\PYG{+w}{ }\PYG{n+nb}{()}
\PYG{n+nf}{dropPrivilegesRoot}\PYG{+w}{ }\PYG{n}{context}\PYG{+w}{ }\PYG{n}{config}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{TenM}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{n+nf}{\PYGZbs{}}\PYG{n}{sp}\PYG{+w}{ }\PYG{k+kr}{\PYGZus{}}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Only drop privileges if running as root}
\PYG{+w}{    }\PYG{n}{uid}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{getRealUserID}

\PYG{+w}{    }\PYG{n}{when}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{uid}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{        }\PYG{n}{logMessage}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{Running as root, dropping privileges...}\PYG{l+s}{\PYGZdq{}}

\PYG{+w}{        }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Get user and group information}
\PYG{+w}{        }\PYG{k+kr}{case}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{daemonUser}\PYG{+w}{ }\PYG{n}{config}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{daemonGroup}\PYG{+w}{ }\PYG{n}{config}\PYG{p}{)}\PYG{+w}{ }\PYG{k+kr}{of}
\PYG{+w}{            }\PYG{p}{(}\PYG{k+kt}{Just}\PYG{+w}{ }\PYG{n}{userName}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{Just}\PYG{+w}{ }\PYG{n}{groupName}\PYG{p}{)}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Get user entry}
\PYG{+w}{                }\PYG{n}{userEntry}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{getUserEntryForName}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{T}\PYG{o}{.}\PYG{n}{unpack}\PYG{+w}{ }\PYG{n}{userName}\PYG{p}{)}

\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Get group entry}
\PYG{+w}{                }\PYG{n}{groupEntry}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{getGroupEntryForName}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{T}\PYG{o}{.}\PYG{n}{unpack}\PYG{+w}{ }\PYG{n}{groupName}\PYG{p}{)}

\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Update store permissions before dropping privileges}
\PYG{+w}{                }\PYG{n}{ensureStorePermissions}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{userID}\PYG{+w}{ }\PYG{n}{userEntry}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{groupID}\PYG{+w}{ }\PYG{n}{groupEntry}\PYG{p}{)}

\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Keep store root owned by root for security}
\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} But ensure daemon can read/write store contents}

\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Set supplementary groups first}
\PYG{+w}{                }\PYG{n}{setGroups}\PYG{+w}{ }\PYG{k+kt}{[]}

\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Set group ID (must be done before user ID)}
\PYG{+w}{                }\PYG{n}{setGroupID}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{groupID}\PYG{+w}{ }\PYG{n}{groupEntry}\PYG{p}{)}

\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Set user ID}
\PYG{+w}{                }\PYG{n}{setUserID}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{userID}\PYG{+w}{ }\PYG{n}{userEntry}\PYG{p}{)}

\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Verify the change}
\PYG{+w}{                }\PYG{n}{newUid}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{getEffectiveUserID}
\PYG{+w}{                }\PYG{n}{when}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{newUid}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}
\PYG{+w}{                    }\PYG{n}{logError}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{Failed to drop privileges \PYGZhy{} still running as root!}\PYG{l+s}{\PYGZdq{}}

\PYG{+w}{                }\PYG{n}{logMessage}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{Successfully dropped privileges to user=}\PYG{l+s}{\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZgt{}}
\PYG{+w}{                            }\PYG{n}{userName}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZgt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{, group=}\PYG{l+s}{\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZgt{}}\PYG{+w}{ }\PYG{n}{groupName}

\PYG{+w}{            }\PYG{p}{(}\PYG{k+kt}{Just}\PYG{+w}{ }\PYG{n}{userName}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{Nothing}\PYG{p}{)}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Get user entry}
\PYG{+w}{                }\PYG{n}{userEntry}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{getUserEntryForName}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{T}\PYG{o}{.}\PYG{n}{unpack}\PYG{+w}{ }\PYG{n}{userName}\PYG{p}{)}

\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Use user\PYGZsq{}s primary group}
\PYG{+w}{                }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{primaryGid}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{userGroupID}\PYG{+w}{ }\PYG{n}{userEntry}

\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Set supplementary groups}
\PYG{+w}{                }\PYG{n}{setGroups}\PYG{+w}{ }\PYG{k+kt}{[]}

\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Set group ID}
\PYG{+w}{                }\PYG{n}{setGroupID}\PYG{+w}{ }\PYG{n}{primaryGid}

\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Set user ID}
\PYG{+w}{                }\PYG{n}{setUserID}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{userID}\PYG{+w}{ }\PYG{n}{userEntry}\PYG{p}{)}

\PYG{+w}{                }\PYG{n}{logMessage}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{Successfully dropped privileges to user=}\PYG{l+s}{\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZgt{}}\PYG{+w}{ }\PYG{n}{userName}

\PYG{+w}{            }\PYG{k+kr}{\PYGZus{}}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}
\PYG{+w}{                }\PYG{n}{logMessage}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{No user/group specified, continuing to run as root}\PYG{l+s}{\PYGZdq{}}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} | Ensure store permissions are appropriate for daemon user}
\PYG{n+nf}{ensureStorePermissions}\PYG{+w}{ }\PYG{o+ow}{::}
\PYG{+w}{    }\PYG{k+kt}{SPrivilegeTier}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Daemon}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{       }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Privilege evidence}
\PYG{+w}{    }\PYG{k+kt}{UserID}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{                       }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} User ID}
\PYG{+w}{    }\PYG{k+kt}{GroupID}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{                      }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Group ID}
\PYG{+w}{    }\PYG{k+kt}{TenM}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Build}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Daemon}\PYG{+w}{ }\PYG{n+nb}{()}
\PYG{n+nf}{ensureStorePermissions}\PYG{+w}{ }\PYG{n}{st}\PYG{+w}{ }\PYG{n}{uid}\PYG{+w}{ }\PYG{n}{gid}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{TenM}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{n+nf}{\PYGZbs{}}\PYG{n}{sp}\PYG{+w}{ }\PYG{k+kr}{\PYGZus{}}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{    }\PYG{n}{env}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{ask}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Get store and state paths}
\PYG{+w}{    }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{storeDir}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{storePath}\PYG{+w}{ }\PYG{n}{env}
\PYG{+w}{    }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{tmpDir}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{tempPath}\PYG{+w}{ }\PYG{n}{env}
\PYG{+w}{    }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{stateFile}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{statePath}\PYG{+w}{ }\PYG{n}{env}
\PYG{+w}{    }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{socketPath}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{n}{socketPath}\PYG{+w}{ }\PYG{n}{env}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Create necessary directories with proper ownership}
\PYG{+w}{    }\PYG{n}{createDirectoryIfMissing}\PYG{+w}{ }\PYG{k+kt}{True}\PYG{+w}{ }\PYG{n}{storeDir}
\PYG{+w}{    }\PYG{n}{createDirectoryIfMissing}\PYG{+w}{ }\PYG{k+kt}{True}\PYG{+w}{ }\PYG{n}{tmpDir}
\PYG{+w}{    }\PYG{n}{createDirectoryIfMissing}\PYG{+w}{ }\PYG{k+kt}{True}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{takeDirectory}\PYG{+w}{ }\PYG{n}{stateFile}\PYG{p}{)}
\PYG{+w}{    }\PYG{n}{createDirectoryIfMissing}\PYG{+w}{ }\PYG{k+kt}{True}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{takeDirectory}\PYG{+w}{ }\PYG{n}{socketPath}\PYG{p}{)}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Create critical store subdirectories}
\PYG{+w}{    }\PYG{n}{createDirectoryIfMissing}\PYG{+w}{ }\PYG{k+kt}{True}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{storeDir}\PYG{+w}{ }\PYG{o}{\PYGZlt{}/\PYGZgt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{var/ten}\PYG{l+s}{\PYGZdq{}}\PYG{p}{)}
\PYG{+w}{    }\PYG{n}{createDirectoryIfMissing}\PYG{+w}{ }\PYG{k+kt}{True}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{storeDir}\PYG{+w}{ }\PYG{o}{\PYGZlt{}/\PYGZgt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{var/ten/db}\PYG{l+s}{\PYGZdq{}}\PYG{p}{)}
\PYG{+w}{    }\PYG{n}{createDirectoryIfMissing}\PYG{+w}{ }\PYG{k+kt}{True}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{storeDir}\PYG{+w}{ }\PYG{o}{\PYGZlt{}/\PYGZgt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{var/ten/gcroots}\PYG{l+s}{\PYGZdq{}}\PYG{p}{)}
\PYG{+w}{    }\PYG{n}{createDirectoryIfMissing}\PYG{+w}{ }\PYG{k+kt}{True}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{storeDir}\PYG{+w}{ }\PYG{o}{\PYGZlt{}/\PYGZgt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{var/ten/profiles}\PYG{l+s}{\PYGZdq{}}\PYG{p}{)}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Set appropriate ownership and permissions for key directories}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Keep store root owned by root, but writable by daemon group}
\PYG{+w}{    }\PYG{n}{setFileMode}\PYG{+w}{ }\PYG{n}{storeDir}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{ownerReadMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{ownerWriteMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{ownerExecuteMode}\PYG{+w}{ }\PYG{o}{.|.}
\PYG{+w}{                         }\PYG{n}{groupReadMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{groupWriteMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{groupExecuteMode}\PYG{p}{)}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Set var/ten group writable}
\PYG{+w}{    }\PYG{n}{setOwnerAndGroup}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{storeDir}\PYG{+w}{ }\PYG{o}{\PYGZlt{}/\PYGZgt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{var/ten}\PYG{l+s}{\PYGZdq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{+w}{ }\PYG{n}{gid}
\PYG{+w}{    }\PYG{n}{setFileMode}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{storeDir}\PYG{+w}{ }\PYG{o}{\PYGZlt{}/\PYGZgt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{var/ten}\PYG{l+s}{\PYGZdq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{ownerReadMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{ownerWriteMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{ownerExecuteMode}\PYG{+w}{ }\PYG{o}{.|.}
\PYG{+w}{                                         }\PYG{n}{groupReadMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{groupWriteMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{groupExecuteMode}\PYG{p}{)}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Set /var/ten/db group writable}
\PYG{+w}{    }\PYG{n}{setOwnerAndGroup}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{storeDir}\PYG{+w}{ }\PYG{o}{\PYGZlt{}/\PYGZgt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{var/ten/db}\PYG{l+s}{\PYGZdq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{n}{uid}\PYG{+w}{ }\PYG{n}{gid}
\PYG{+w}{    }\PYG{n}{setFileMode}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{storeDir}\PYG{+w}{ }\PYG{o}{\PYGZlt{}/\PYGZgt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{var/ten/db}\PYG{l+s}{\PYGZdq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{ownerReadMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{ownerWriteMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{ownerExecuteMode}\PYG{+w}{ }\PYG{o}{.|.}
\PYG{+w}{                                           }\PYG{n}{groupReadMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{groupWriteMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{groupExecuteMode}\PYG{p}{)}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Set tmpDir to daemon user}
\PYG{+w}{    }\PYG{n}{setOwnerAndGroup}\PYG{+w}{ }\PYG{n}{tmpDir}\PYG{+w}{ }\PYG{n}{uid}\PYG{+w}{ }\PYG{n}{gid}
\PYG{+w}{    }\PYG{n}{setFileMode}\PYG{+w}{ }\PYG{n}{tmpDir}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{ownerReadMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{ownerWriteMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{ownerExecuteMode}\PYG{+w}{ }\PYG{o}{.|.}
\PYG{+w}{                       }\PYG{n}{groupReadMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{groupWriteMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{groupExecuteMode}\PYG{p}{)}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Ensure socket directory is accessible}
\PYG{+w}{    }\PYG{n}{setFileMode}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{takeDirectory}\PYG{+w}{ }\PYG{n}{socketPath}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{ownerReadMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{ownerWriteMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{ownerExecuteMode}\PYG{+w}{ }\PYG{o}{.|.}
\PYG{+w}{                                          }\PYG{n}{groupReadMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{groupWriteMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{groupExecuteMode}\PYG{+w}{ }\PYG{o}{.|.}
\PYG{+w}{                                          }\PYG{n}{otherReadMode}\PYG{+w}{ }\PYG{o}{.|.}\PYG{+w}{ }\PYG{n}{otherExecuteMode}\PYG{p}{)}

\PYG{+w}{    }\PYG{n}{logMessage}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{Set appropriate permissions on store directories}\PYG{l+s}{\PYGZdq{}}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} | Run a builder process with dropped privileges}
\PYG{n+nf}{runBuilderProcess}\PYG{+w}{ }\PYG{o+ow}{::}
\PYG{+w}{    }\PYG{k+kt}{SPrivilegeTier}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Daemon}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{       }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Daemon privilege evidence}
\PYG{+w}{    }\PYG{k+kt}{FilePath}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{                      }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Program path}
\PYG{+w}{    }\PYG{p}{[}\PYG{k+kt}{String}\PYG{p}{]}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{                      }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Arguments}
\PYG{+w}{    }\PYG{p}{[}\PYG{p}{(}\PYG{k+kt}{String}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{String}\PYG{p}{)}\PYG{p}{]}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{            }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Environment}
\PYG{+w}{    }\PYG{k+kt}{UserID}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{                        }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} User ID to run as}
\PYG{+w}{    }\PYG{k+kt}{GroupID}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{                       }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Group ID to run as}
\PYG{+w}{    }\PYG{k+kt}{TenM}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Build}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Daemon}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{ExitCode}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{String}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{String}\PYG{p}{)}
\PYG{n+nf}{runBuilderProcess}\PYG{+w}{ }\PYG{n}{st}\PYG{+w}{ }\PYG{n}{program}\PYG{+w}{ }\PYG{n}{args}\PYG{+w}{ }\PYG{n}{env}\PYG{+w}{ }\PYG{n}{uid}\PYG{+w}{ }\PYG{n}{gid}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{TenM}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{n+nf}{\PYGZbs{}}\PYG{n}{sp}\PYG{+w}{ }\PYG{k+kr}{\PYGZus{}}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Get current user ID}
\PYG{+w}{    }\PYG{n}{currentUid}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{getRealUserID}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Create process configuration}
\PYG{+w}{    }\PYG{k+kr}{let}\PYG{+w}{ }\PYG{n}{processConfig}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{proc}\PYG{+w}{ }\PYG{n}{program}\PYG{+w}{ }\PYG{n}{args}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{n}{env}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{Just}\PYG{+w}{ }\PYG{n}{env}\PYG{p}{,}
\PYG{+w}{            }\PYG{n}{std\PYGZus{}in}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{NoStream}\PYG{p}{,}
\PYG{+w}{            }\PYG{n}{std\PYGZus{}out}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{CreatePipe}\PYG{p}{,}
\PYG{+w}{            }\PYG{n}{std\PYGZus{}err}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{CreatePipe}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Run the process}
\PYG{+w}{    }\PYG{k+kr}{if}\PYG{+w}{ }\PYG{n}{currentUid}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+m+mi}{0}
\PYG{+w}{        }\PYG{k+kr}{then}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{            }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Running as root, drop privileges to specified UID/GID}
\PYG{+w}{            }\PYG{n}{mask}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{n+nf}{\PYGZbs{}}\PYG{n}{restore}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Create the process with a pipe}
\PYG{+w}{                }\PYG{p}{(}\PYG{k+kr}{\PYGZus{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{mbStdout}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{mbStderr}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{processHandle}\PYG{p}{)}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{createProcess}\PYG{+w}{ }\PYG{n}{processConfig}

\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Drop privileges for the process using singleton evidence}
\PYG{+w}{                }\PYG{n}{dropProcessPrivileges}\PYG{+w}{ }\PYG{n}{st}\PYG{+w}{ }\PYG{n}{processHandle}\PYG{+w}{ }\PYG{n}{uid}\PYG{+w}{ }\PYG{n}{gid}

\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Read output}
\PYG{+w}{                }\PYG{n}{output}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{restore}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{                    }\PYG{n}{stdoutContents}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{hGetContents}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{fromJust}\PYG{+w}{ }\PYG{n}{mbStdout}\PYG{p}{)}
\PYG{+w}{                    }\PYG{n}{stderrContents}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{hGetContents}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{fromJust}\PYG{+w}{ }\PYG{n}{mbStderr}\PYG{p}{)}
\PYG{+w}{                    }\PYG{n}{exitCode}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{waitForProcess}\PYG{+w}{ }\PYG{n}{processHandle}
\PYG{+w}{                    }\PYG{n}{return}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{exitCode}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{stdoutContents}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{stderrContents}\PYG{p}{)}

\PYG{+w}{                }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Close handles and return}
\PYG{+w}{                }\PYG{n}{hClose}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{fromJust}\PYG{+w}{ }\PYG{n}{mbStdout}\PYG{p}{)}
\PYG{+w}{                }\PYG{n}{hClose}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{fromJust}\PYG{+w}{ }\PYG{n}{mbStderr}\PYG{p}{)}
\PYG{+w}{                }\PYG{n}{return}\PYG{+w}{ }\PYG{n}{output}
\PYG{+w}{        }\PYG{k+kr}{else}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{            }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Not running as root, can\PYGZsq{}t drop privileges}
\PYG{+w}{            }\PYG{p}{(}\PYG{n}{exitCode}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{stdout}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{stderr}\PYG{p}{)}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{readCreateProcessWithExitCode}\PYG{+w}{ }\PYG{n}{processConfig}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}}\PYG{l+s}{\PYGZdq{}}
\PYG{+w}{            }\PYG{n}{return}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{exitCode}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{stdout}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{stderr}\PYG{p}{)}

\PYG{c+c1}{\PYGZhy{}\PYGZhy{} | Drop privileges for a specific process}
\PYG{n+nf}{dropProcessPrivileges}\PYG{+w}{ }\PYG{o+ow}{::}
\PYG{+w}{    }\PYG{k+kt}{SPrivilegeTier}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Daemon}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{       }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Daemon privilege evidence}
\PYG{+w}{    }\PYG{k+kt}{ProcessHandle}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{                 }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Process handle}
\PYG{+w}{    }\PYG{k+kt}{UserID}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{                        }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} User ID to run as}
\PYG{+w}{    }\PYG{k+kt}{GroupID}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{                       }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} \PYGZca{} Group ID to run as}
\PYG{+w}{    }\PYG{k+kt}{TenM}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Build}\PYG{+w}{ }\PYG{k+kt}{\PYGZsq{}Daemon}\PYG{+w}{ }\PYG{n+nb}{()}
\PYG{n+nf}{dropProcessPrivileges}\PYG{+w}{ }\PYG{n}{st}\PYG{+w}{ }\PYG{n}{processHandle}\PYG{+w}{ }\PYG{n}{uid}\PYG{+w}{ }\PYG{n}{gid}\PYG{+w}{ }\PYG{o+ow}{=}\PYG{+w}{ }\PYG{k+kt}{TenM}\PYG{+w}{ }\PYG{o}{\PYGZdl{}}\PYG{+w}{ }\PYG{n+nf}{\PYGZbs{}}\PYG{n}{sp}\PYG{+w}{ }\PYG{k+kr}{\PYGZus{}}\PYG{+w}{ }\PYG{o+ow}{\PYGZhy{}\PYGZgt{}}\PYG{+w}{ }\PYG{k+kr}{do}
\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Get process ID from handle}
\PYG{+w}{    }\PYG{n}{pid}\PYG{+w}{ }\PYG{o+ow}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{getProcessID}\PYG{+w}{ }\PYG{n}{processHandle}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Use system calls to change process credentials}
\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} This would use ptrace or similar OS\PYGZhy{}specific mechanism}
\PYG{+w}{    }\PYG{n}{changeProcessCredentials}\PYG{+w}{ }\PYG{n}{pid}\PYG{+w}{ }\PYG{n}{uid}\PYG{+w}{ }\PYG{n}{gid}

\PYG{+w}{    }\PYG{c+c1}{\PYGZhy{}\PYGZhy{} Verify the change}
\PYG{+w}{    }\PYG{n}{verifyProcessCredentials}\PYG{+w}{ }\PYG{n}{pid}\PYG{+w}{ }\PYG{n}{uid}
\end{MintedVerbatim}
