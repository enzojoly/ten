Build profile: -w ghc-9.8.2 -O1
In order, the following will be built (use -v for more details):
 - ten-0.1.0.0 (test:ten-test) (first run)
Preprocessing test suite 'ten-test' for ten-0.1.0.0...
Building test suite 'ten-test' for ten-0.1.0.0...
Running 1 test suites...
Test suite ten-test: RUNNING...

Ten Build System Tests
  StorePath Tests
    validates a valid store path [✔]
    rejects an invalid store path with short hash [✔]
    rejects an invalid store path with empty name [✔]
    converts store path to text and back [✔]
  Hash Tests
    creates consistent hashes for the same content [✔]
    creates different hashes for different content [✔]
  Graph Tests
    detects cycles in dependency graph [✘]
    topologically sorts a directed acyclic graph [✘]
  Derivation Tests
    serializes and deserializes a derivation [✔]
    compares derivations properly for equality [✔]
  Sandbox Tests
    creates a valid sandbox configuration with return support [✔]
  Build Tests
    verifies build results correctly [✔]
  StorePath Properties
    validateStorePath accepts all properly formed StorePaths [✔]
      +++ OK, passed 100 tests.
    Store paths with short hashes are rejected [✔]
      +++ OK, passed 100 tests.
    StorePath to text and back round trip works [✔]
      +++ OK, passed 100 tests.
  Graph Properties
Error in cycle detection: PrivilegeError "Privilege tier mismatch"
    detectCycles identifies acyclic graphs correctly [✘]
Error in topological sort: PrivilegeError "Privilege tier mismatch"
    topological sort preserves all nodes in acyclic graphs [✘]

Failures:

  test/Spec.hs:213:28: 
  1) Ten Build System Tests, Graph Tests, detects cycles in dependency graph
       expected: Right True
        but got: Left (PrivilegeError "Privilege tier mismatch")

  To rerun use: --match "/Ten Build System Tests/Graph Tests/detects cycles in dependency graph/" --seed 312996313

  test/Spec.hs:244:37: 
  2) Ten Build System Tests, Graph Tests, topologically sorts a directed acyclic graph
       uncaught exception: ErrorCall
       Test failed: PrivilegeError "Privilege tier mismatch"
       CallStack (from HasCallStack):
         error, called at test/Spec.hs:244:37 in ten-0.1.0.0-inplace-ten-test:Main

  To rerun use: --match "/Ten Build System Tests/Graph Tests/topologically sorts a directed acyclic graph/" --seed 312996313

  test/Spec.hs:323:17: 
  3) Ten Build System Tests, Graph Properties, detectCycles identifies acyclic graphs correctly
       Falsified (after 1 test):
         BuildGraph {graphNodes = fromList [("1",DerivationNode (Derivation {derivName = "4", derivHash = "2feddf86392e295cc8b47adafa2c134c7174b796b9ce", derivBuilder = StorePath {storeHash = "8be78b9abd48606c", storeName = "0"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "25a243506b953348dfd2dbd69afc29ebde", storeName = "t"}, inputName = "o"},DerivationInput {inputPath = StorePath {storeHash = "2eed350989ef35b3ca3801c2c8cbeb12582dd36f28319e7a8f5e8be2e514f", storeName = "d"}, inputName = "b"},DerivationInput {inputPath = StorePath {storeHash = "ccf1f5cfbca999dc73bc531e2859f58d6cbeb3f906ec88c1bfc88cb329485d8", storeName = "1"}, inputName = "g"}], derivOutputs = fromList [DerivationOutput {outputName = "c", outputPath = StorePath {storeHash = "7c5eb87c7381e3db17a815146c729c9cd60fbd15d6", storeName = "u"}},DerivationOutput {outputName = "g", outputPath = StorePath {storeHash = "8fa2f6edfc7e8516c604baff667c9f", storeName = "m"}},DerivationOutput {outputName = "l", outputPath = StorePath {storeHash = "a38a0e763fcc449d24cadf57940e6671a7c322f6d9131fcef66cb", storeName = "w"}},DerivationOutput {outputName = "p", outputPath = StorePath {storeHash = "496f5dcb53a555f2a8c97a6d0fa90a5b8f256585fcad", storeName = "g"}},DerivationOutput {outputName = "x", outputPath = StorePath {storeHash = "fc12d246780e8b", storeName = "m"}}], derivEnv = fromList [("6",""),("8",""),("I",""),("O","")], derivSystem = "x86_64-darwin", derivStrategy = ApplicativeStrategy, derivMeta = fromList [("5",""),("N","")]})),("10",DerivationNode (Derivation {derivName = "b", derivHash = "bde6ea3dec8503c61a64689", derivBuilder = StorePath {storeHash = "56fc88be611b2e", storeName = "z"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "61be0c331107187497cb63ebdde1bbaccd0cab43ac7e4d371d6945f47", storeName = "s"}, inputName = "l"},DerivationInput {inputPath = StorePath {storeHash = "83c5a4b3a4c1b11851a00caa0cc64a9bca8", storeName = "l"}, inputName = "v"},DerivationInput {inputPath = StorePath {storeHash = "a2df8e21", storeName = "r"}, inputName = "h"},DerivationInput {inputPath = StorePath {storeHash = "a9801a89dc2ddaa8c10078b595719f4fff8f9c0efb29b55be33e9b1e94", storeName = "."}, inputName = "f"},DerivationInput {inputPath = StorePath {storeHash = "b45826707166dd2500a5db3043a8c578b556a66390b7d3dd0737ec8149397a3", storeName = "o"}, inputName = "z"}], derivOutputs = fromList [DerivationOutput {outputName = "k", outputPath = StorePath {storeHash = "8798e4d780794c9662694b0a", storeName = "a"}},DerivationOutput {outputName = "t", outputPath = StorePath {storeHash = "baf145d628d910b93a261546f", storeName = "a"}},DerivationOutput {outputName = "y", outputPath = StorePath {storeHash = "13c5aeb46518eb0ef8", storeName = "a"}},DerivationOutput {outputName = "y", outputPath = StorePath {storeHash = "e1628ea638cb49a", storeName = "3"}}], derivEnv = fromList [("2",""),("N",""),("Q","")], derivSystem = "x86_64-darwin", derivStrategy = MonadicStrategy, derivMeta = fromList [("D",""),("J","")]})),("2",DerivationNode (Derivation {derivName = "c", derivHash = "f3b67a0d5b810351e14d69af7b910fd5aead5914e3", derivBuilder = StorePath {storeHash = "b1a540600f69ef0d26cdc6d193b71799488e56d58", storeName = "o"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "0317208f12ca055c83b264f691846582430", storeName = "9"}, inputName = "x"},DerivationInput {inputPath = StorePath {storeHash = "5036f82412c9fb19ef99167512058b808ed8bd469d7a3c06530f8525f6f0e", storeName = "e"}, inputName = "l"},DerivationInput {inputPath = StorePath {storeHash = "bb9673d2f75788332d9924ffb9d6f6f7", storeName = "8"}, inputName = "t"},DerivationInput {inputPath = StorePath {storeHash = "dec287c79a94c90ad2c7771a650d03c656456700158c5068ea4606b81ab805", storeName = "v"}, inputName = "n"}], derivOutputs = fromList [DerivationOutput {outputName = "i", outputPath = StorePath {storeHash = "8347335f062c36711", storeName = "-"}},DerivationOutput {outputName = "p", outputPath = StorePath {storeHash = "0c6e7cc49a178b86a3c91fc543e5f98735c", storeName = "b"}},DerivationOutput {outputName = "s", outputPath = StorePath {storeHash = "77e89155e1261939f1f6db869fbafb4cd3b15930aae09b7be2d2c64af6", storeName = "y"}},DerivationOutput {outputName = "u", outputPath = StorePath {storeHash = "56f5a2382295660a949ef0ccffa13830ed28399bfa3857dc8", storeName = "4"}},DerivationOutput {outputName = "z", outputPath = StorePath {storeHash = "5694838e23bb", storeName = "-"}}], derivEnv = fromList [("4",""),("P",""),("Q",""),("T","")], derivSystem = "i686-linux", derivStrategy = MonadicStrategy, derivMeta = fromList []})),("3",DerivationNode (Derivation {derivName = "y", derivHash = "cf83b6859f74dcb8bfaed718", derivBuilder = StorePath {storeHash = "6f4fec6af2d0ea6f", storeName = "k"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "464c65c0787e06c6a622b78e5c556b55", storeName = "z"}, inputName = "c"},DerivationInput {inputPath = StorePath {storeHash = "904762166da9296fccb88ec90217941db6", storeName = "5"}, inputName = "i"},DerivationInput {inputPath = StorePath {storeHash = "c26f10901", storeName = "1"}, inputName = "y"}], derivOutputs = fromList [DerivationOutput {outputName = "a", outputPath = StorePath {storeHash = "60a8f511cbeeb6d190a1a8f6bfff92eed5b70b78adda20210d2c318fc12133b", storeName = "7"}},DerivationOutput {outputName = "f", outputPath = StorePath {storeHash = "24060f64d", storeName = "u"}},DerivationOutput {outputName = "m", outputPath = StorePath {storeHash = "8f0713104163a7b509b58bda59483aece62d01f4149365234e2", storeName = "t"}},DerivationOutput {outputName = "x", outputPath = StorePath {storeHash = "b3fa323d15cb142c9f12f09487fbfa5a48f76c18d5e8f45db152da232e447d", storeName = "l"}}], derivEnv = fromList [("M",""),("P",""),("W",""),("X","")], derivSystem = "x86_64-darwin", derivStrategy = ApplicativeStrategy, derivMeta = fromList []})),("4",DerivationNode (Derivation {derivName = "0", derivHash = "2d48fee7e4c520230", derivBuilder = StorePath {storeHash = "042f158731a076f7", storeName = "n"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "2b5e079370986ca5795d41", storeName = "-"}, inputName = "g"},DerivationInput {inputPath = StorePath {storeHash = "47fb770bf503b107b0f14038261ca623c28d3", storeName = "6"}, inputName = "e"},DerivationInput {inputPath = StorePath {storeHash = "e958c092b3a1a0e381d79da6a5ff4801cb1ccc68a", storeName = "3"}, inputName = "h"}], derivOutputs = fromList [DerivationOutput {outputName = "h", outputPath = StorePath {storeHash = "8338299ce9799e2a50da37f1c3b3", storeName = "l"}},DerivationOutput {outputName = "m", outputPath = StorePath {storeHash = "b221f8ae6", storeName = "9"}},DerivationOutput {outputName = "o", outputPath = StorePath {storeHash = "cd68c88570209d0afb0b57", storeName = "w"}},DerivationOutput {outputName = "q", outputPath = StorePath {storeHash = "72a5997ab4270d462f5b", storeName = "3"}}], derivEnv = fromList [("C",""),("E",""),("H",""),("J",""),("O","")], derivSystem = "aarch64-linux", derivStrategy = ApplicativeStrategy, derivMeta = fromList []})),("5",DerivationNode (Derivation {derivName = "-", derivHash = "d00b9778082a38aadc7f", derivBuilder = StorePath {storeHash = "5b76f263e4e15963dc21c88a", storeName = "8"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "0f406e468141e", storeName = "u"}, inputName = "j"},DerivationInput {inputPath = StorePath {storeHash = "b65ca1fb75bab72b33dbd6d52c3264f5194f5c65c0fc865368825f9", storeName = "y"}, inputName = "r"}], derivOutputs = fromList [DerivationOutput {outputName = "b", outputPath = StorePath {storeHash = "69d8feb734", storeName = "y"}},DerivationOutput {outputName = "g", outputPath = StorePath {storeHash = "2e9d3eca0542a13c763c361c7fa39d0b424a110bf", storeName = "7"}},DerivationOutput {outputName = "i", outputPath = StorePath {storeHash = "0d346fca46eb6f9284fe", storeName = "z"}},DerivationOutput {outputName = "j", outputPath = StorePath {storeHash = "1ddaabeed956cc9ae58bdd74694f22539f5647418c57c18eed29e6e6", storeName = "u"}}], derivEnv = fromList [("R","")], derivSystem = "aarch64-linux", derivStrategy = ApplicativeStrategy, derivMeta = fromList [("H",""),("L",""),("Y","")]})),("6",DerivationNode (Derivation {derivName = "i", derivHash = "2ded9f1c2bfd1dca5d89177ceaf8ee7c4c14d8ccf05e", derivBuilder = StorePath {storeHash = "e4e2f15eed8a59e6209c20d6407b63e25c06883909dfafd", storeName = "g"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "21311891e37ec8c642390c7bf16809068c41d333c5b7531215", storeName = "9"}, inputName = "v"},DerivationInput {inputPath = StorePath {storeHash = "3ee921b1b7b41dca65f1425dfc39c9883bbecb830c8d3f4", storeName = "v"}, inputName = "f"},DerivationInput {inputPath = StorePath {storeHash = "67a552ecdbd19e4650513e538e3348a8bbcd62f92c1d71b92c", storeName = "i"}, inputName = "y"},DerivationInput {inputPath = StorePath {storeHash = "f97b3fead623a4721b6ff77ed27610b0b3b0f07f9b1caf", storeName = "7"}, inputName = "s"}], derivOutputs = fromList [DerivationOutput {outputName = "i", outputPath = StorePath {storeHash = "095251f64c6ec7b", storeName = "x"}}], derivEnv = fromList [("2",""),("R","")], derivSystem = "x86_64-darwin", derivStrategy = ApplicativeStrategy, derivMeta = fromList [("J",""),("M",""),("Z","")]})),("7",DerivationNode (Derivation {derivName = "c", derivHash = "4a8afdc1a47fc428331b7942fe9dff", derivBuilder = StorePath {storeHash = "70b761a456a0fac5ad897f3cffc8750d640b633a796e3e", storeName = "t"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "330da51b49a0fb56968d933d1c93a573df23c70c3b4a22ecbfdc", storeName = "g"}, inputName = "g"},DerivationInput {inputPath = StorePath {storeHash = "5714e95ee59131ec5e610c862b9b6e1bc556ae998241", storeName = "a"}, inputName = "n"},DerivationInput {inputPath = StorePath {storeHash = "7862a2f7286b0c55bd4003b", storeName = "7"}, inputName = "l"},DerivationInput {inputPath = StorePath {storeHash = "f63016a191b1864b27e", storeName = "k"}, inputName = "t"}], derivOutputs = fromList [DerivationOutput {outputName = "l", outputPath = StorePath {storeHash = "1512e14b6a89f837607b2f", storeName = "1"}},DerivationOutput {outputName = "m", outputPath = StorePath {storeHash = "8d4a4f69c91933b", storeName = "l"}},DerivationOutput {outputName = "r", outputPath = StorePath {storeHash = "0efee016266d9bdf110a61b96b246be43d6aabf059ac029a", storeName = "z"}},DerivationOutput {outputName = "v", outputPath = StorePath {storeHash = "d3e1e33e3880d1096bd31f5888f62880c2220e6325cd020ff9b4a2", storeName = "s"}},DerivationOutput {outputName = "w", outputPath = StorePath {storeHash = "f8a16f4283673a4c8b479362a5afed5adae1c5fe451d6fbc2bd", storeName = "+"}}], derivEnv = fromList [("2",""),("3",""),("6",""),("C",""),("M","")], derivSystem = "i686-linux", derivStrategy = ApplicativeStrategy, derivMeta = fromList []})),("8",DerivationNode (Derivation {derivName = "g", derivHash = "ce4873f4", derivBuilder = StorePath {storeHash = "7fd24bd0fc7c", storeName = "k"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "4cec88d0f70c78", storeName = "y"}, inputName = "x"}], derivOutputs = fromList [DerivationOutput {outputName = "i", outputPath = StorePath {storeHash = "9b9bc64f5c02a643cb8f6f6f3ba9153209a6650e3fc1c098", storeName = "_"}},DerivationOutput {outputName = "j", outputPath = StorePath {storeHash = "f15dbc9f84897ff0797aca79228fd6619330a248802fd3e89f92", storeName = "u"}},DerivationOutput {outputName = "m", outputPath = StorePath {storeHash = "ab6031bc315720", storeName = "n"}},DerivationOutput {outputName = "n", outputPath = StorePath {storeHash = "a40f66e45785eec886cf473bbfdeb5dfffc3c2f11ab8b", storeName = "u"}},DerivationOutput {outputName = "w", outputPath = StorePath {storeHash = "32cf79b5182bb1e6a00db5be14b7fa848c54247f7eeb49", storeName = "f"}}], derivEnv = fromList [("7","")], derivSystem = "i686-linux", derivStrategy = ApplicativeStrategy, derivMeta = fromList []})),("9",DerivationNode (Derivation {derivName = "v", derivHash = "969a5bdc71d87a5ffba68f4d56c6f1f321bc3f36989de8db9", derivBuilder = StorePath {storeHash = "5df9f3f8d", storeName = "a"}, derivArgs = [], derivInputs = fromList [], derivOutputs = fromList [DerivationOutput {outputName = "a", outputPath = StorePath {storeHash = "43d29446dbd79d8645aa1aa1fdde90347", storeName = "v"}}], derivEnv = fromList [("D","")], derivSystem = "i686-linux", derivStrategy = ApplicativeStrategy, derivMeta = fromList [("2",""),("U",""),("Z","")]}))], graphEdges = fromList [("10",fromList ["1","2","5","7"]),("2",fromList []),("3",fromList []),("4",fromList []),("5",fromList ["2","4"]),("6",fromList ["2","4","5"]),("7",fromList ["4","5"]),("8",fromList ["1"]),("9",fromList ["3","4","5"])], graphRoots = fromList ["5"], graphProof = Just ValidProof}

  To rerun use: --match "/Ten Build System Tests/Graph Properties/detectCycles identifies acyclic graphs correctly/" --seed 312996313

  test/Spec.hs:342:17: 
  4) Ten Build System Tests, Graph Properties, topological sort preserves all nodes in acyclic graphs
       Falsified (after 1 test):
         BuildGraph {graphNodes = fromList [("1",DerivationNode (Derivation {derivName = "4", derivHash = "2feddf86392e295cc8b47adafa2c134c7174b796b9ce", derivBuilder = StorePath {storeHash = "8be78b9abd48606c", storeName = "0"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "25a243506b953348dfd2dbd69afc29ebde", storeName = "t"}, inputName = "o"},DerivationInput {inputPath = StorePath {storeHash = "2eed350989ef35b3ca3801c2c8cbeb12582dd36f28319e7a8f5e8be2e514f", storeName = "d"}, inputName = "b"},DerivationInput {inputPath = StorePath {storeHash = "ccf1f5cfbca999dc73bc531e2859f58d6cbeb3f906ec88c1bfc88cb329485d8", storeName = "1"}, inputName = "g"}], derivOutputs = fromList [DerivationOutput {outputName = "c", outputPath = StorePath {storeHash = "7c5eb87c7381e3db17a815146c729c9cd60fbd15d6", storeName = "u"}},DerivationOutput {outputName = "g", outputPath = StorePath {storeHash = "8fa2f6edfc7e8516c604baff667c9f", storeName = "m"}},DerivationOutput {outputName = "l", outputPath = StorePath {storeHash = "a38a0e763fcc449d24cadf57940e6671a7c322f6d9131fcef66cb", storeName = "w"}},DerivationOutput {outputName = "p", outputPath = StorePath {storeHash = "496f5dcb53a555f2a8c97a6d0fa90a5b8f256585fcad", storeName = "g"}},DerivationOutput {outputName = "x", outputPath = StorePath {storeHash = "fc12d246780e8b", storeName = "m"}}], derivEnv = fromList [("6",""),("8",""),("I",""),("O","")], derivSystem = "x86_64-darwin", derivStrategy = ApplicativeStrategy, derivMeta = fromList [("5",""),("N","")]})),("10",DerivationNode (Derivation {derivName = "b", derivHash = "bde6ea3dec8503c61a64689", derivBuilder = StorePath {storeHash = "56fc88be611b2e", storeName = "z"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "61be0c331107187497cb63ebdde1bbaccd0cab43ac7e4d371d6945f47", storeName = "s"}, inputName = "l"},DerivationInput {inputPath = StorePath {storeHash = "83c5a4b3a4c1b11851a00caa0cc64a9bca8", storeName = "l"}, inputName = "v"},DerivationInput {inputPath = StorePath {storeHash = "a2df8e21", storeName = "r"}, inputName = "h"},DerivationInput {inputPath = StorePath {storeHash = "a9801a89dc2ddaa8c10078b595719f4fff8f9c0efb29b55be33e9b1e94", storeName = "."}, inputName = "f"},DerivationInput {inputPath = StorePath {storeHash = "b45826707166dd2500a5db3043a8c578b556a66390b7d3dd0737ec8149397a3", storeName = "o"}, inputName = "z"}], derivOutputs = fromList [DerivationOutput {outputName = "k", outputPath = StorePath {storeHash = "8798e4d780794c9662694b0a", storeName = "a"}},DerivationOutput {outputName = "t", outputPath = StorePath {storeHash = "baf145d628d910b93a261546f", storeName = "a"}},DerivationOutput {outputName = "y", outputPath = StorePath {storeHash = "13c5aeb46518eb0ef8", storeName = "a"}},DerivationOutput {outputName = "y", outputPath = StorePath {storeHash = "e1628ea638cb49a", storeName = "3"}}], derivEnv = fromList [("2",""),("N",""),("Q","")], derivSystem = "x86_64-darwin", derivStrategy = MonadicStrategy, derivMeta = fromList [("D",""),("J","")]})),("2",DerivationNode (Derivation {derivName = "c", derivHash = "f3b67a0d5b810351e14d69af7b910fd5aead5914e3", derivBuilder = StorePath {storeHash = "b1a540600f69ef0d26cdc6d193b71799488e56d58", storeName = "o"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "0317208f12ca055c83b264f691846582430", storeName = "9"}, inputName = "x"},DerivationInput {inputPath = StorePath {storeHash = "5036f82412c9fb19ef99167512058b808ed8bd469d7a3c06530f8525f6f0e", storeName = "e"}, inputName = "l"},DerivationInput {inputPath = StorePath {storeHash = "bb9673d2f75788332d9924ffb9d6f6f7", storeName = "8"}, inputName = "t"},DerivationInput {inputPath = StorePath {storeHash = "dec287c79a94c90ad2c7771a650d03c656456700158c5068ea4606b81ab805", storeName = "v"}, inputName = "n"}], derivOutputs = fromList [DerivationOutput {outputName = "i", outputPath = StorePath {storeHash = "8347335f062c36711", storeName = "-"}},DerivationOutput {outputName = "p", outputPath = StorePath {storeHash = "0c6e7cc49a178b86a3c91fc543e5f98735c", storeName = "b"}},DerivationOutput {outputName = "s", outputPath = StorePath {storeHash = "77e89155e1261939f1f6db869fbafb4cd3b15930aae09b7be2d2c64af6", storeName = "y"}},DerivationOutput {outputName = "u", outputPath = StorePath {storeHash = "56f5a2382295660a949ef0ccffa13830ed28399bfa3857dc8", storeName = "4"}},DerivationOutput {outputName = "z", outputPath = StorePath {storeHash = "5694838e23bb", storeName = "-"}}], derivEnv = fromList [("4",""),("P",""),("Q",""),("T","")], derivSystem = "i686-linux", derivStrategy = MonadicStrategy, derivMeta = fromList []})),("3",DerivationNode (Derivation {derivName = "y", derivHash = "cf83b6859f74dcb8bfaed718", derivBuilder = StorePath {storeHash = "6f4fec6af2d0ea6f", storeName = "k"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "464c65c0787e06c6a622b78e5c556b55", storeName = "z"}, inputName = "c"},DerivationInput {inputPath = StorePath {storeHash = "904762166da9296fccb88ec90217941db6", storeName = "5"}, inputName = "i"},DerivationInput {inputPath = StorePath {storeHash = "c26f10901", storeName = "1"}, inputName = "y"}], derivOutputs = fromList [DerivationOutput {outputName = "a", outputPath = StorePath {storeHash = "60a8f511cbeeb6d190a1a8f6bfff92eed5b70b78adda20210d2c318fc12133b", storeName = "7"}},DerivationOutput {outputName = "f", outputPath = StorePath {storeHash = "24060f64d", storeName = "u"}},DerivationOutput {outputName = "m", outputPath = StorePath {storeHash = "8f0713104163a7b509b58bda59483aece62d01f4149365234e2", storeName = "t"}},DerivationOutput {outputName = "x", outputPath = StorePath {storeHash = "b3fa323d15cb142c9f12f09487fbfa5a48f76c18d5e8f45db152da232e447d", storeName = "l"}}], derivEnv = fromList [("M",""),("P",""),("W",""),("X","")], derivSystem = "x86_64-darwin", derivStrategy = ApplicativeStrategy, derivMeta = fromList []})),("4",DerivationNode (Derivation {derivName = "0", derivHash = "2d48fee7e4c520230", derivBuilder = StorePath {storeHash = "042f158731a076f7", storeName = "n"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "2b5e079370986ca5795d41", storeName = "-"}, inputName = "g"},DerivationInput {inputPath = StorePath {storeHash = "47fb770bf503b107b0f14038261ca623c28d3", storeName = "6"}, inputName = "e"},DerivationInput {inputPath = StorePath {storeHash = "e958c092b3a1a0e381d79da6a5ff4801cb1ccc68a", storeName = "3"}, inputName = "h"}], derivOutputs = fromList [DerivationOutput {outputName = "h", outputPath = StorePath {storeHash = "8338299ce9799e2a50da37f1c3b3", storeName = "l"}},DerivationOutput {outputName = "m", outputPath = StorePath {storeHash = "b221f8ae6", storeName = "9"}},DerivationOutput {outputName = "o", outputPath = StorePath {storeHash = "cd68c88570209d0afb0b57", storeName = "w"}},DerivationOutput {outputName = "q", outputPath = StorePath {storeHash = "72a5997ab4270d462f5b", storeName = "3"}}], derivEnv = fromList [("C",""),("E",""),("H",""),("J",""),("O","")], derivSystem = "aarch64-linux", derivStrategy = ApplicativeStrategy, derivMeta = fromList []})),("5",DerivationNode (Derivation {derivName = "-", derivHash = "d00b9778082a38aadc7f", derivBuilder = StorePath {storeHash = "5b76f263e4e15963dc21c88a", storeName = "8"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "0f406e468141e", storeName = "u"}, inputName = "j"},DerivationInput {inputPath = StorePath {storeHash = "b65ca1fb75bab72b33dbd6d52c3264f5194f5c65c0fc865368825f9", storeName = "y"}, inputName = "r"}], derivOutputs = fromList [DerivationOutput {outputName = "b", outputPath = StorePath {storeHash = "69d8feb734", storeName = "y"}},DerivationOutput {outputName = "g", outputPath = StorePath {storeHash = "2e9d3eca0542a13c763c361c7fa39d0b424a110bf", storeName = "7"}},DerivationOutput {outputName = "i", outputPath = StorePath {storeHash = "0d346fca46eb6f9284fe", storeName = "z"}},DerivationOutput {outputName = "j", outputPath = StorePath {storeHash = "1ddaabeed956cc9ae58bdd74694f22539f5647418c57c18eed29e6e6", storeName = "u"}}], derivEnv = fromList [("R","")], derivSystem = "aarch64-linux", derivStrategy = ApplicativeStrategy, derivMeta = fromList [("H",""),("L",""),("Y","")]})),("6",DerivationNode (Derivation {derivName = "i", derivHash = "2ded9f1c2bfd1dca5d89177ceaf8ee7c4c14d8ccf05e", derivBuilder = StorePath {storeHash = "e4e2f15eed8a59e6209c20d6407b63e25c06883909dfafd", storeName = "g"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "21311891e37ec8c642390c7bf16809068c41d333c5b7531215", storeName = "9"}, inputName = "v"},DerivationInput {inputPath = StorePath {storeHash = "3ee921b1b7b41dca65f1425dfc39c9883bbecb830c8d3f4", storeName = "v"}, inputName = "f"},DerivationInput {inputPath = StorePath {storeHash = "67a552ecdbd19e4650513e538e3348a8bbcd62f92c1d71b92c", storeName = "i"}, inputName = "y"},DerivationInput {inputPath = StorePath {storeHash = "f97b3fead623a4721b6ff77ed27610b0b3b0f07f9b1caf", storeName = "7"}, inputName = "s"}], derivOutputs = fromList [DerivationOutput {outputName = "i", outputPath = StorePath {storeHash = "095251f64c6ec7b", storeName = "x"}}], derivEnv = fromList [("2",""),("R","")], derivSystem = "x86_64-darwin", derivStrategy = ApplicativeStrategy, derivMeta = fromList [("J",""),("M",""),("Z","")]})),("7",DerivationNode (Derivation {derivName = "c", derivHash = "4a8afdc1a47fc428331b7942fe9dff", derivBuilder = StorePath {storeHash = "70b761a456a0fac5ad897f3cffc8750d640b633a796e3e", storeName = "t"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "330da51b49a0fb56968d933d1c93a573df23c70c3b4a22ecbfdc", storeName = "g"}, inputName = "g"},DerivationInput {inputPath = StorePath {storeHash = "5714e95ee59131ec5e610c862b9b6e1bc556ae998241", storeName = "a"}, inputName = "n"},DerivationInput {inputPath = StorePath {storeHash = "7862a2f7286b0c55bd4003b", storeName = "7"}, inputName = "l"},DerivationInput {inputPath = StorePath {storeHash = "f63016a191b1864b27e", storeName = "k"}, inputName = "t"}], derivOutputs = fromList [DerivationOutput {outputName = "l", outputPath = StorePath {storeHash = "1512e14b6a89f837607b2f", storeName = "1"}},DerivationOutput {outputName = "m", outputPath = StorePath {storeHash = "8d4a4f69c91933b", storeName = "l"}},DerivationOutput {outputName = "r", outputPath = StorePath {storeHash = "0efee016266d9bdf110a61b96b246be43d6aabf059ac029a", storeName = "z"}},DerivationOutput {outputName = "v", outputPath = StorePath {storeHash = "d3e1e33e3880d1096bd31f5888f62880c2220e6325cd020ff9b4a2", storeName = "s"}},DerivationOutput {outputName = "w", outputPath = StorePath {storeHash = "f8a16f4283673a4c8b479362a5afed5adae1c5fe451d6fbc2bd", storeName = "+"}}], derivEnv = fromList [("2",""),("3",""),("6",""),("C",""),("M","")], derivSystem = "i686-linux", derivStrategy = ApplicativeStrategy, derivMeta = fromList []})),("8",DerivationNode (Derivation {derivName = "g", derivHash = "ce4873f4", derivBuilder = StorePath {storeHash = "7fd24bd0fc7c", storeName = "k"}, derivArgs = [], derivInputs = fromList [DerivationInput {inputPath = StorePath {storeHash = "4cec88d0f70c78", storeName = "y"}, inputName = "x"}], derivOutputs = fromList [DerivationOutput {outputName = "i", outputPath = StorePath {storeHash = "9b9bc64f5c02a643cb8f6f6f3ba9153209a6650e3fc1c098", storeName = "_"}},DerivationOutput {outputName = "j", outputPath = StorePath {storeHash = "f15dbc9f84897ff0797aca79228fd6619330a248802fd3e89f92", storeName = "u"}},DerivationOutput {outputName = "m", outputPath = StorePath {storeHash = "ab6031bc315720", storeName = "n"}},DerivationOutput {outputName = "n", outputPath = StorePath {storeHash = "a40f66e45785eec886cf473bbfdeb5dfffc3c2f11ab8b", storeName = "u"}},DerivationOutput {outputName = "w", outputPath = StorePath {storeHash = "32cf79b5182bb1e6a00db5be14b7fa848c54247f7eeb49", storeName = "f"}}], derivEnv = fromList [("7","")], derivSystem = "i686-linux", derivStrategy = ApplicativeStrategy, derivMeta = fromList []})),("9",DerivationNode (Derivation {derivName = "v", derivHash = "969a5bdc71d87a5ffba68f4d56c6f1f321bc3f36989de8db9", derivBuilder = StorePath {storeHash = "5df9f3f8d", storeName = "a"}, derivArgs = [], derivInputs = fromList [], derivOutputs = fromList [DerivationOutput {outputName = "a", outputPath = StorePath {storeHash = "43d29446dbd79d8645aa1aa1fdde90347", storeName = "v"}}], derivEnv = fromList [("D","")], derivSystem = "i686-linux", derivStrategy = ApplicativeStrategy, derivMeta = fromList [("2",""),("U",""),("Z","")]}))], graphEdges = fromList [("10",fromList ["1","2","5","7"]),("2",fromList []),("3",fromList []),("4",fromList []),("5",fromList ["2","4"]),("6",fromList ["2","4","5"]),("7",fromList ["4","5"]),("8",fromList ["1"]),("9",fromList ["3","4","5"])], graphRoots = fromList ["5"], graphProof = Just ValidProof}

  To rerun use: --match "/Ten Build System Tests/Graph Properties/topological sort preserves all nodes in acyclic graphs/" --seed 312996313

Randomized with seed 312996313

Finished in 0.0184 seconds
17 examples, 4 failures
Test suite ten-test: FAIL
Test suite logged to:
/home/enzo/ten/dist-newstyle/build/x86_64-linux/ghc-9.8.2/ten-0.1.0.0/t/ten-test/test/ten-0.1.0.0-ten-test.log
0 of 1 test suites (0 of 1 test cases) passed.
Error: [Cabal-7125]
Tests failed for test:ten-test from ten-0.1.0.0.

