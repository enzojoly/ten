Build profile: -w ghc-9.8.2 -O1
In order, the following will be built (use -v for more details):
 - ten-0.1.0.0 (lib) (first run)
 - ten-0.1.0.0 (exe:ten-daemon) (first run)
 - ten-0.1.0.0 (exe:ten) (first run)
Preprocessing library for ten-0.1.0.0...
Building library for ten-0.1.0.0...
[ 1 of 21] Compiling Ten.Core         ( src/Ten/Core.hs, /home/enzo/ten/dist-newstyle/build/x86_64-linux/ghc-9.8.2/ten-0.1.0.0/build/Ten/Core.o, /home/enzo/ten/dist-newstyle/build/x86_64-linux/ghc-9.8.2/ten-0.1.0.0/build/Ten/Core.dyn_o ) [Source file changed]

src/Ten/Core.hs:41:5: warning: [GHC-47854] [-Wduplicate-exports]
    ‘sing’ is exported by ‘sing’ and ‘SingI(..)’
   |
41 |     sing,
   |     ^^^^

src/Ten/Core.hs:169:5: warning: [GHC-47854] [-Wduplicate-exports]
    ‘currentBuildId’ is exported by ‘currentBuildId’ and ‘BuildState(..)’
    |
169 |     currentBuildId,
    |     ^^^^^^^^^^^^^^

src/Ten/Core.hs:170:5: warning: [GHC-47854] [-Wduplicate-exports]
    ‘verbosity’ is exported by ‘verbosity’ and ‘BuildEnv(..)’
    |
170 |     verbosity
    |     ^^^^^^^^^

src/Ten/Core.hs:179:1: warning: [GHC-66111] [-Wunused-imports]
    The import of ‘Control.Monad.IO.Class’ is redundant
      except perhaps to import instances from ‘Control.Monad.IO.Class’
    To import instances alone, use: import Control.Monad.IO.Class()
    |
179 | import Control.Monad.IO.Class
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:190:1: warning: [GHC-66111] [-Wunused-imports]
    The qualified import of ‘Data.Text.Encoding’ is redundant
      except perhaps to import instances from ‘Data.Text.Encoding’
    To import instances alone, use: import Data.Text.Encoding()
    |
190 | import qualified Data.Text.Encoding as TE
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:191:1: warning: [GHC-66111] [-Wunused-imports]
    The qualified import of ‘Data.Text.IO’ is redundant
      except perhaps to import instances from ‘Data.Text.IO’
    To import instances alone, use: import Data.Text.IO()
    |
191 | import qualified Data.Text.IO as TIO
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:194:1: warning: [GHC-66111] [-Wunused-imports]
    The qualified import of ‘System.Process’ is redundant
      except perhaps to import instances from ‘System.Process’
    To import instances alone, use: import System.Process()
    |
194 | import qualified System.Process as Process
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:196:1: warning: [GHC-66111] [-Wunused-imports]
    The import of ‘Data.Unique’ is redundant
      except perhaps to import instances from ‘Data.Unique’
    To import instances alone, use: import Data.Unique()
    |
196 | import Data.Unique (Unique, newUnique)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:197:1: warning: [GHC-66111] [-Wunused-imports]
    The import of ‘Data.Proxy’ is redundant
      except perhaps to import instances from ‘Data.Proxy’
    To import instances alone, use: import Data.Proxy()
    |
197 | import Data.Proxy (Proxy(..))
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:199:1: warning: [GHC-38856] [-Wunused-imports]
    The import of ‘IOMode, hClose, stderr, withFile’
    from module ‘System.IO’ is redundant
    |
199 | import System.IO (Handle, IOMode(..), withFile, hClose, hFlush, hPutStrLn, stderr)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:200:1: warning: [GHC-38856] [-Wunused-imports]
    The import of ‘catMaybes, isNothing’
    from module ‘Data.Maybe’ is redundant
    |
200 | import Data.Maybe (isJust, isNothing, fromMaybe, catMaybes)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:201:1: warning: [GHC-66111] [-Wunused-imports]
    The import of ‘Data.List’ is redundant
      except perhaps to import instances from ‘Data.List’
    To import instances alone, use: import Data.List()
    |
201 | import Data.List (isPrefixOf, isInfixOf, nub)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:204:1: warning: [GHC-38856] [-Wunused-imports]
    The import of ‘GroupID, UserID’
    from module ‘System.Posix.Types’ is redundant
    |
204 | import System.Posix.Types (ProcessID, UserID, GroupID)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:206:1: warning: [GHC-66111] [-Wunused-imports]
    The import of ‘System.IO.Error’ is redundant
      except perhaps to import instances from ‘System.IO.Error’
    To import instances alone, use: import System.IO.Error()
    |
206 | import System.IO.Error (isDoesNotExistError)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:207:1: warning: [GHC-38856] [-Wunused-imports]
    The import of ‘ErrorCall, bracket, finally, mask, throwIO’
    from module ‘Control.Exception’ is redundant
    |
207 | import Control.Exception (bracket, try, catch, throwIO, finally, mask, Exception, ErrorCall(..), SomeException)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:208:1: warning: [GHC-66111] [-Wunused-imports]
    The import of ‘System.Environment’ is redundant
      except perhaps to import instances from ‘System.Environment’
    To import instances alone, use: import System.Environment()
    |
208 | import System.Environment (lookupEnv, getEnvironment)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:209:30: warning: [GHC-38856] [-Wunused-imports]
    The import of ‘getProcessID’
    from module ‘System.Posix.Process’ is redundant
    |
209 | import System.Posix.Process (getProcessID, forkProcess, executeFile, getProcessStatus, ProcessStatus(..))
    |                              ^^^^^^^^^^^^

src/Ten/Core.hs:210:1: warning: [GHC-66111] [-Wunused-imports]
    The qualified import of ‘System.Posix.IO’ is redundant
      except perhaps to import instances from ‘System.Posix.IO’
    To import instances alone, use: import System.Posix.IO()
    |
210 | import qualified System.Posix.IO as PosixIO
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:214:1: warning: [GHC-38856] [-Wunused-imports]
    The import of ‘diffUTCTime, getCurrentTime’
    from module ‘Data.Time.Clock’ is redundant
    |
214 | import Data.Time.Clock (UTCTime, getCurrentTime, diffUTCTime)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:215:1: warning: [GHC-66111] [-Wunused-imports]
    The import of ‘Data.Time.Clock.POSIX’ is redundant
      except perhaps to import instances from ‘Data.Time.Clock.POSIX’
    To import instances alone, use: import Data.Time.Clock.POSIX()
    |
215 | import Data.Time.Clock.POSIX (posixSecondsToUTCTime)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:219:1: warning: [GHC-66111] [-Wunused-imports]
    The import of ‘Data.Kind’ is redundant
      except perhaps to import instances from ‘Data.Kind’
    To import instances alone, use: import Data.Kind()
    |
219 | import Data.Kind (Type)
    | ^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:223:1: warning: [GHC-66111] [-Wunused-imports]
    The qualified import of ‘Data.Aeson.Encoding’ is redundant
      except perhaps to import instances from ‘Data.Aeson.Encoding’
    To import instances alone, use: import Data.Aeson.Encoding()
    |
223 | import qualified Data.Aeson.Encoding as Aeson
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:224:1: warning: [GHC-66111] [-Wunused-imports]
    The import of ‘Crypto.Hash’ is redundant
      except perhaps to import instances from ‘Crypto.Hash’
    To import instances alone, use: import Crypto.Hash()
    |
224 | import Crypto.Hash (hash, SHA256(..), Digest)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:225:1: warning: [GHC-66111] [-Wunused-imports]
    The qualified import of ‘Crypto.Hash’ is redundant
      except perhaps to import instances from ‘Crypto.Hash’
    To import instances alone, use: import Crypto.Hash()
    |
225 | import qualified Crypto.Hash as Crypto
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:226:1: warning: [GHC-66111] [-Wunused-imports]
    The import of ‘System.Random’ is redundant
      except perhaps to import instances from ‘System.Random’
    To import instances alone, use: import System.Random()
    |
226 | import System.Random (randomRIO)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:245:2: warning: [GHC-40910] [-Wunused-top-binds]
    Defined but not used: type constructor or class ‘EvalSym0’
    |
245 | $(genSingletons [''Phase, ''PrivilegeTier])
    |  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:245:2: warning: [GHC-40910] [-Wunused-top-binds]
    Defined but not used: type constructor or class ‘DaemonSym0’
    |
245 | $(genSingletons [''Phase, ''PrivilegeTier])
    |  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:245:2: warning: [GHC-40910] [-Wunused-top-binds]
    Defined but not used: type constructor or class ‘BuilderSym0’
    |
245 | $(genSingletons [''Phase, ''PrivilegeTier])
    |  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:245:2: warning: [GHC-40910] [-Wunused-top-binds]
    Defined but not used: type constructor or class ‘BuildSym0’
    |
245 | $(genSingletons [''Phase, ''PrivilegeTier])
    |  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:356:28: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘hash’ shadows the existing binding
      imported from ‘Crypto.Hash’ at src/Ten/Core.hs:224:21-24
    |
356 | storePathToText (StorePath hash name) = hash <> "-" <> name
    |                            ^^^^

src/Ten/Core.hs:366:10: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘hash’ shadows the existing binding
      imported from ‘Crypto.Hash’ at src/Ten/Core.hs:224:21-24
    |
366 |         (hash, name) | not (T.null name) && validateHash hash ->
    |          ^^^^

src/Ten/Core.hs:379:30: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘hash’ shadows the existing binding
      imported from ‘Crypto.Hash’ at src/Ten/Core.hs:224:21-24
    |
379 | validateStorePath (StorePath hash name) =
    |                              ^^^^

src/Ten/Core.hs:536:25: warning: [GHC-40910] [-Wunused-top-binds]
    Defined but not used: data constructor ‘DaemonConnection’
    |
536 | data DaemonConnection = DaemonConnection {
    |                         ^^^^^^^^^^^^^^^^^^...

src/Ten/Core.hs:537:5: warning: [GHC-40910] [-Wunused-top-binds]
    Defined but not used: record field of DaemonConnection ‘connSocket’
    |
537 |     connSocket :: Socket,                     -- ^ Socket connected to daemon
    |     ^^^^^^^^^^

src/Ten/Core.hs:539:5: warning: [GHC-40910] [-Wunused-top-binds]
    Defined but not used: record field of DaemonConnection ‘connUserId’
    |
539 |     connUserId :: UserId,                     -- ^ Authenticated user ID
    |     ^^^^^^^^^^

src/Ten/Core.hs:540:5: warning: [GHC-40910] [-Wunused-top-binds]
    Defined but not used:
      record field of DaemonConnection ‘connAuthToken’
    |
540 |     connAuthToken :: AuthToken,               -- ^ Authentication token
    |     ^^^^^^^^^^^^^

src/Ten/Core.hs:543:5: warning: [GHC-40910] [-Wunused-top-binds]
    Defined but not used:
      record field of DaemonConnection ‘connReaderThread’
    |
543 |     connReaderThread :: ThreadId,             -- ^ Thread ID of the response reader
    |     ^^^^^^^^^^^^^^^^

src/Ten/Core.hs:544:5: warning: [GHC-40910] [-Wunused-top-binds]
    Defined but not used:
      record field of DaemonConnection ‘connShutdown’
    |
544 |     connShutdown :: TVar Bool                 -- ^ Flag to indicate connection shutdown
    |     ^^^^^^^^^^^^

src/Ten/Core.hs:748:27: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘state’ shadows the existing binding
      imported from ‘Control.Monad.State’ at src/Ten/Core.hs:178:1-26
      (and originally defined in ‘Control.Monad.State.Class’)
    |
748 | runTen sp st (TenM m) env state = do
    |                           ^^^^^

src/Ten/Core.hs:772:20: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘state’ shadows the existing binding
      imported from ‘Control.Monad.State’ at src/Ten/Core.hs:178:1-26
      (and originally defined in ‘Control.Monad.State.Class’)
    |
772 | runTenDaemon m env state = do
    |                    ^^^^^

src/Ten/Core.hs:791:26: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘state’ shadows the existing binding
      imported from ‘Control.Monad.State’ at src/Ten/Core.hs:178:1-26
      (and originally defined in ‘Control.Monad.State.Class’)
    |
791 | runTenBuilder_Eval m env state = do
    |                          ^^^^^

src/Ten/Core.hs:798:27: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘state’ shadows the existing binding
      imported from ‘Control.Monad.State’ at src/Ten/Core.hs:178:1-26
      (and originally defined in ‘Control.Monad.State.Class’)
    |
798 | runTenBuilder_Build m env state = do
    |                           ^^^^^

src/Ten/Core.hs:865:25: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Integral a0)
          arising from a use of ‘fromIntegral’ at src/Ten/Core.hs:865:25-36
        (Num a0) arising from a use of ‘*’ at src/Ten/Core.hs:865:68
    • In the first argument of ‘($)’, namely ‘fromIntegral’
      In the expression:
        fromIntegral
          $ BS.foldl' (\ acc byte -> acc * 33 + fromIntegral byte) 5381 bs
      In an equation for ‘hashByteString’:
          hashByteString bs
            = fromIntegral
                $ BS.foldl' (\ acc byte -> acc * 33 + fromIntegral byte) 5381 bs
    |
865 |     hashByteString bs = fromIntegral $ BS.foldl' (\acc byte -> acc * 33 + fromIntegral byte) 5381 bs
    |                         ^^^^^^^^^^^^

src/Ten/Core.hs:955:25: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Integral a0)
          arising from a use of ‘fromIntegral’ at src/Ten/Core.hs:955:25-36
        (Num a0) arising from a use of ‘*’ at src/Ten/Core.hs:955:68
    • In the first argument of ‘($)’, namely ‘fromIntegral’
      In the expression:
        fromIntegral
          $ BS.foldl' (\ acc byte -> acc * 33 + fromIntegral byte) 5381 bs
      In an equation for ‘hashByteString’:
          hashByteString bs
            = fromIntegral
                $ BS.foldl' (\ acc byte -> acc * 33 + fromIntegral byte) 5381 bs
    |
955 |     hashByteString bs = fromIntegral $ BS.foldl' (\acc byte -> acc * 33 + fromIntegral byte) 5381 bs
    |                         ^^^^^^^^^^^^

src/Ten/Core.hs:1062:19: warning: [GHC-40910] [-Wunused-matches]
    Defined but not used: ‘e’
     |
1062 |             Left (e :: SomeException) -> return ()
     |                   ^

src/Ten/Core.hs:1124:9: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘hash’ shadows the existing binding
      imported from ‘Crypto.Hash’ at src/Ten/Core.hs:224:21-24
     |
1124 |         hash <- obj .: "hash"
     |         ^^^^

src/Ten/Core.hs:1202:9: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘parseStorePath’ shadows the existing binding
      defined at src/Ten/Core.hs:364:1
     |
1202 |         parseStorePath txt = case textToStorePath txt of
     |         ^^^^^^^^^^^^^^

src/Ten/Core.hs:1260:5: warning: [GHC-40910] [-Wunused-matches]
    Defined but not used: ‘readHandle’
     |
1260 |     readHandle <- liftIO $ PosixIO.fdToHandle readFd
     |     ^^^^^^^^^^

src/Ten/Core.hs:1261:5: warning: [GHC-40910] [-Wunused-matches]
    Defined but not used: ‘writeHandle’
     |
1261 |     writeHandle <- liftIO $ PosixIO.fdToHandle writeFd
     |     ^^^^^^^^^^^

src/Ten/Core.hs:1282:9: warning: [GHC-81995] [-Wunused-do-bind]
    A do-notation statement discarded a result of type
      ‘ghc-prim:GHC.Types.Any’
    Suggested fix:
      Suppress this warning by saying
        ‘_ <- liftIO $ executeFile programPath True args (Just envVars)’
     |
1282 |         liftIO $ executeFile programPath True args (Just envVars)
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Ten/Core.hs:1431:15: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘hash’ shadows the existing binding
      imported from ‘Crypto.Hash’ at src/Ten/Core.hs:224:21-24
     |
1431 | makeStorePath hash name = StorePath hash name
     |               ^^^^
